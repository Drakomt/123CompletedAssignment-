version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1




# version: '3'

# services:
#   kafka:
#     image: confluentinc/cp-kafka:latest
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     expose:
#       - "9093"
#     environment:
#       KAFKA_ADVERTISED_HOST_NAME: localhost
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#       KAFKA_CREATE_TOPICS: "test_topic:1:1"
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     restart: unless-stopped

#   mongodb:
#     image: mongo:latest
#     container_name: mongodb
#     ports:
#       - "27017:27017"

#   redis:
#     image: redis:latest
#     container_name: redis
#     ports:
#       - "6379:6379"



# version: '3'

# services:
#   zookeeper:
#     image: wurstmeister/zookeeper:latest
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     restart: unless-stopped
#   kafka:
#     image: wurstmeister/kafka:latest
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     expose:
#       - "9093"
#     environment:
#       KAFKA_ADVERTISED_HOST_NAME: localhost
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#       KAFKA_CREATE_TOPICS: "test_topic:1:1"
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     restart: unless-stopped

#   mongodb:
#     image: mongo:latest
#     container_name: mongodb
#     ports:
#       - "27017:27017"

#   redis:
#     image: redis:latest
#     container_name: redis
#     ports:
#       - "6379:6379"





# version: '3.8'
# services:
#   kafka:
#     image: wurstmeister/kafka:latest
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_HOST_NAME: localhost
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#     # ports:
#     #   - "9092:9092"
#     # environment:
#     #   KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
#     #   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#     #   KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
#     #   KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#     #   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#     # volumes:
#     #   - /var/run/docker.sock:/var/run/docker.sock

#   zookeeper:
#     image: wurstmeister/zookeeper:latest
#     container_name: zookeeper
#     ports:
#       - "2181:2181"

#   mongodb:
#     image: mongo:latest
#     # environment:
#     #   MONGO_INITDB_ROOT_USERNAME: mongoadmin
#     #   MONGO_INITDB_ROOT_PASSWORD: admin12345
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongodata:/data/db

#   redis:
#     image: redis:latest
#     ports:
#       - "6379:6379"

#   kafka-producer:
#     build:
#       context: ./kafka-producer
#     depends_on:
#       - kafka
#     volumes:
#       - ./kafka-producer:/app

#   kafka-consumer:
#     build:
#       context: ./kafka-consumer
#     depends_on:
#       - kafka
#       - mongodb
#     volumes:
#       - ./kafka-consumer:/app
# volumes:
#   mongodata:
#     driver: local

